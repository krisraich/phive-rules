<?xml version="1.0" encoding="UTF-8"?>
<sch:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
    xmlns:fn="http://www.w3.org/2005/xpath-functions" 
    xmlns:sch="http://purl.oclc.org/dsdl/schematron" schemaVersion="nl.setu.200801.businessrules.humanresource">

    <!--
        ** CHANGELOG **
        * This schematron file for HumanResource version 1.4 has no functional changes compaired to version 1.3
        * Changed rule: nl.setu.200801.businessrules.humanresource.businessrule.SETUVersionId.1 -> use value 1.4
        * Only the namespace of the 'nl' prefix is changed, due to change in namespace of HumanResourceAdditionalNL schema
        
        ** CHANGELOG 03/06/2022 **
        * Added rule: nl.setu.2022.businessrules.humanresource.businessrule.CustomerRateClassification.1

        ** CHANGELOG 07/10/2024 v1.4.1 **
        * Revised rule: nl.setu.2022.businessrules.assignment.businessrule.CustomerRateClassification.1 -> add Break as value to codelist
    -->

    <sch:title>Business rules voor het controleren van een human resource bericht (SETU Standard for Ordering &amp; Selection versie 1.4).</sch:title>
    <sch:ns prefix="setu" uri="http://ns.hr-xml.org/2007-04-15"/>
    <sch:ns prefix="nl" uri="http://ns.setu.nl/2020-01"/>
    
    <!-- Lijst met waarden voor rule humanresource HumanResourceStatus.1-->
    <sch:let name="HumanResourceStatus" value="',new,revised,accepted,withdrawn,rejected,x:assigned,'"/>

    <!-- Lijst met waarden voor rule humanresource RateType.1-->
    <sch:let name="RateType" value="',pay,bill,'"/>

    <!-- Lijst met waarden voor rule humanresource Amount.1 -->
    <sch:let name="Amount" value="',hourly,x:hourlysplit,x:hourlyconsolidated,daily,weekly,x:4weekly,monthly,yearly,flatfee,'"/>

    <!-- Lijst met waarden voor rule humanresource Class.1 -->
    <sch:let name="Class" value="',TimeInterval,Allowance,Expense,'"/>

    <!-- Lijst met waarden voor rule humanresource WorkingAndThinkingLevel.1 -->
    <sch:let name="Degree" value="',1,2,3,4,5,6,'"/>

    <!-- Lijst met waarden voor idOwner-->
    <sch:let name="IdOwner" value="',StaffingCustomer,StaffingCompany,KvK,OIN,BTW,Fi,'"/>
    
    <!-- Lijst met waarden voor rules:
        nl.setu.2022.businessrules.humanresource.businessrule.CustomerRateClassification.1
    -->
    <sch:let name="SETU_CL_HourTypes" value="',Additional wage dispensation,Adoption leave,Child-birth sick time,Internship,Overtime wage dispensation,Pregnancy sick time,Regular wage dispensation,Shift wage dispensation,Transition allowance,Vacation additional,Additionalplus,Regular canceled,Shift canceled,Shiftplus canceled,Additional canceled,Additionalplus canceled,Regular complemented,Additional complemented,Shift complemented,Overtime complemented,Overtime canceled,Overtimeplus canceled,Regular,Overtime,Overtimeplus,Shift,Shiftplus,Attendance,Travel,Additional,Internal,Time for time hour build-up,Time for time overtime hour build-up,Special Leave,Short leave,Holiday,Unpaid leave,Training,Vacation,Reduction of working hours,Sick time,Work underload,Care Leave,WTR (work time reduction),Compensation leave,Funeral,Maternity Leave,Withdrawal time for time hours,Contract hours,Standby,Break,'"/>

    <!-- Lijst met waarden voor rules:
        nl.setu.2022.businessrules.humanresource.businessrule.CustomerRateClassification.1
    -->
    <sch:let name="SETU_CL_ExpenseAllowanceTypes" value="',100,100B,100O,101,101B,101O,102,102B,102O,103,103B,103O,104,104B,104O,105,105B,105O,106,106B,106O,107,107B,107O,201,201B,201O,202,202B,202O,203,203B,203O,300,300B,300O,301,301B,301O,302,302B,302O,303,303B,303O,304,304B,304O,400,400B,400O,501,501B,501O,502,502B,502O,503,503B,503O,600,600B,600O,601,601B,601O,602,602B,602O,603,603B,603O,604,604B,604O,701,701B,701O,702,702B,702O,703,703B,703O,801,801B,801O,802,802B,802O,803,803B,803O,900,900B,900O,901,901B,901O,903,903B,903O,904,904B,904O,905,905B,905O,906,906B,906O,907,907B,907O,908,908B,908O,909,909B,909O,910,910B,910O,911,911B,911O,912,912B,912O,913,913B,913O,914,914B,914O,'"/>

    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.HumanResourceId.1" fpi="Controleren of voor elke idOwner het element HumanResourceId 1x gebruikt wordt." context="/setu:HumanResource" flag="error">
            <sch:assert test="count(setu:HumanResourceId) = count(setu:HumanResourceId[not(@idOwner = preceding-sibling::setu:HumanResourceId/@idOwner)])">
                The idOwner attributes of the HumanResourceId elements are not unique. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.HumanResourceId.2" fpi="Controleren of het element HumanResourceId minimaal 1x en maximaal 2x voorkomt." context="/setu:HumanResource" flag="error">
            <sch:assert test="(count(setu:HumanResourceId) &gt;=1) and (count(setu:HumanResourceId) &lt;=2) ">
                The element HumanResourceId must exist at least once and at most twice. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.HumanResourceId.3" fpi="Controleren of het attribuut idOwner van het element HumanResourceId exact 1x aanwezig is en een juiste waarde bevat." context="/setu:HumanResource//setu:HumanResourceId" flag="error">
            <sch:assert test="(count(@idOwner)=1) and        ((normalize-space(@idOwner) = 'StaffingCustomer') or (normalize-space(@idOwner) = 'StaffingCompany')) ">
                The attribute idOwner of the element HumanResourceId must exist exactly once and should have a valid value, either 'StaffingCustomer' or 'StaffingCompany'. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.HumanResourceId.4" fpi="Controleren of het subelement IdValue van het element HumanResourceId exact 1x voorkomt." context="/setu:HumanResource//setu:HumanResourceId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element HumanResourceId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.HumanResourceStatus.1" fpi="Controleren of attribuut status van HumanResourceStatus een correcte waarde heeft." context="/setu:HumanResource/setu:HumanResourceStatus" flag="error">
            <sch:assert test="contains($HumanResourceStatus, concat(',', @status, ','))">
                The attribute status of the element HumanResourceStatus must contain one of the following values: <sch:value-of select="$HumanResourceStatus"/>
                Currently '<sch:value-of select="@status"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.ReferenceInformation.1" fpi="Controleren of het element ReferenceInformation de juiste elementen bevat." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="(count(setu:IntermediaryId)=0) and (count(setu:BillToEntityId)=0) and (count(setu:PositionId)=0) and (count(setu:AssignmentId)=0) and (count(setu:TimeCardId)=0) and (count(setu:InvoiceId)=0) and (count(setu:StaffingOrganizationId)=0) and (count(setu:UserArea)=0) and (count(setu:MasterOrderId)=0)">
                The element ReferenceInformation contains (a) subelement(s) that is/are not allowed.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierId.1" fpi="Controleren of voor elke idOwner het element StaffingSupplierId 1x gebruikt wordt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:StaffingSupplierId) = count(setu:StaffingSupplierId[not(@idOwner = preceding-sibling::setu:StaffingSupplierId/@idOwner)])">
                The idOwner attributes of the StaffingSupplierId elements are not unique. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierId.2" fpi="Controleren of het element StaffingSupplierId minimaal 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:StaffingSupplierId) &gt;=1 ">
                The element StaffingSupplierId must exist at least once. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierId.3" fpi="Controleren of het attribuut idOwner van het element StaffingSupplierId exact 1x aanwezig is en een juiste waarde bevat." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingSupplierId" flag="error">
            <sch:assert test="(count(@idOwner)=1) and contains($IdOwner, concat(',', @idOwner, ','))">
                The attribute idOwner of the element StaffingSupplierId must exist exactly once and should have a valid value: <sch:value-of select="$IdOwner"/>
                Currently '<sch:value-of select="@idOwner"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierId.4" fpi="Controleren of het subelement IdValue van het element StaffingSupplierId exact 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingSupplierId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element StaffingSupplierId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerId.1" fpi="Controleren of voor elke idOwner het element StaffingCustomerId 1x gebruikt wordt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:StaffingCustomerId) = count(setu:StaffingCustomerId[not(@idOwner = preceding-sibling::setu:StaffingCustomerId/@idOwner)])">
                The idOwner attributes of the StaffingCustomerId elements are not unique. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerId.2" fpi="Controleren of het element StaffingCustomerId minimaal 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:StaffingCustomerId) &gt;=1">
                The element StaffingCustomerId must exist at least once. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerId.3" fpi="Controleren of het attribuut idOwner van het element StaffingCustomerId exact 1x aanwezig is en een juiste waarde bevat." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingCustomerId" flag="error">
            <sch:assert test="(count(@idOwner)=1) and contains($IdOwner, concat(',', @idOwner, ','))">
                The attribute idOwner of the element StaffingCustomerId must exist exactly once and should have a valid value: <sch:value-of select="$IdOwner"/>
                Currently '<sch:value-of select="@idOwner"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerId.4" fpi="Controleren of het subelement IdValue van het element StaffingCustomerId exact 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingCustomerId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element StaffingCustomerId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.OrderId.1" fpi="Controleren of het element OrderId maximaal 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:OrderId) &lt;=1">
                The element OrderId may exist at most once. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.OrderId.2" fpi="Controleren of het attribuut idOwner van het element OrderId exact 1x aanwezig is en een juiste waarde bevat." context="/setu:HumanResource/setu:ReferenceInformation/setu:OrderId" flag="error">
            <sch:assert test="(count(@idOwner)=1) and ((normalize-space(@idOwner) = 'StaffingCustomer') or (normalize-space(@idOwner) = 'StaffingCompany'))">
                The attribute idOwner of the element OrderId must exist exactly once and should have a valid value, either 'StaffingCustomer' or 'StaffingCompany'. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.OrderId.3" fpi="Controleren of het subelement IdValue van het element OrderId exact 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation/setu:OrderId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element OrderId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierOrgUnitId.1" fpi="Controleren of voor elke idOwner het element StaffingSupplierOrgUnitId 1x gebruikt wordt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:StaffingSupplierOrgUnitId) = count(setu:StaffingSupplierOrgUnitId[not(@idOwner = preceding-sibling::setu:StaffingSupplierOrgUnitId/@idOwner)])">
                The idOwner attributes of the StaffingSupplierOrgUnitId elements are not unique. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierOrgUnitId.3" fpi="Controleren of het attribuut idOwner van het element StaffingSupplierOrgUnitId exact 1x aanwezig is en een juiste waarde bevat." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingSupplierOrgUnitId" flag="error">
            <sch:assert test="(count(@idOwner)=1) and contains($IdOwner, concat(',', @idOwner, ','))">
                The attribute idOwner of the element StaffingSupplierOrgUnitId must exist exactly once and should have a valid value: <sch:value-of select="$IdOwner"/>
                Currently '<sch:value-of select="@idOwner"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingSupplierOrgUnitId.4" fpi="Controleren of het subelement IdValue van het element StaffingSupplierOrgUnitId exact 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingSupplierOrgUnitId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element StaffingSupplierOrgUnitId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerOrgUnitId.1" fpi="Controleren of voor elke idOwner het element StaffingCustomerOrgUnitId 1x gebruikt wordt." context="/setu:HumanResource/setu:ReferenceInformation" flag="error">
            <sch:assert test="count(setu:StaffingCustomerOrgUnitId) = count(setu:StaffingCustomerOrgUnitId[not(@idOwner = preceding-sibling::setu:StaffingCustomerOrgUnitId/@idOwner)])">
                The idOwner attributes of the StaffingCustomerOrgUnitId elements are not unique. 
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerOrgUnitId.3" fpi="Controleren of het attribuut idOwner van het element StaffingCustomerOrgUnitId exact 1x aanwezig is en een juiste waarde bevat." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingCustomerOrgUnitId" flag="error">
            <sch:assert test="(count(@idOwner)=1) and contains($IdOwner, concat(',', @idOwner, ','))">
                The attribute idOwner of the element StaffingCustomerOrgUnitId must exist exactly once and should have a valid value: <sch:value-of select="$IdOwner"/>
                Currently '<sch:value-of select="@idOwner"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingCustomerOrgUnitId.4" fpi="Controleren of het subelement IdValue van het element StaffingCustomerOrgUnitId exact 1x voorkomt." context="/setu:HumanResource/setu:ReferenceInformation//setu:StaffingCustomerOrgUnitId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element StaffingCustomerOrgUnitId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.PersonName.1" fpi="Controleren of het element FamilyName maximaal 2x voorkomt." context="/setu:HumanResource/setu:ResourceInformation/setu:PersonName" flag="error">
            <sch:assert test="count(setu:FamilyName) &lt;= 2">
                The element FamilyName may exist at most 2 times.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.PersonName.2" fpi="Controleren of het element PersonName de juiste elementen bevat." context="//setu:PersonName" flag="error">
            <sch:assert test="count(setu:FormattedName) = 1">
                The element FormattedName is a mandatory subelement of PersonName.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.FamilyName.1" fpi="Controleren of het attribuut primary van het element FamilyName een correcte waarde heeft." context="/setu:HumanResource/setu:ResourceInformation/setu:PersonName//setu:FamilyName" flag="error">
            <sch:assert test="(normalize-space(@primary)='true') or (normalize-space(@primary)='false')">
                The attribute primary of the element FamilyName must contain one of the following values: true, false.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.ContactMethod.1" fpi="Controleren of het element ContactMethod exact 1x voorkomt." context="/setu:HumanResource/setu:ResourceInformation/setu:EntityContactInfo" flag="error">
            <sch:assert test="count(setu:ContactMethod)=1">
                The element ContactMethod of the element EntityContactInfo must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.RateType.1" fpi="Controleren of het attribuut rateType van het element Rates een correcte waarde bevat." context="/setu:HumanResource//setu:Rates" flag="error">
            <sch:assert test="contains($RateType, concat(',', @rateType, ','))">
                The attribute rateType of the element Rates must contain one of the following values: <sch:value-of select="$RateType"/>
                Currently '<sch:value-of select="@rateType"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.RateStatus.1" fpi="Controleren of het attribuut rateStatus van het element Rates een correcte waarde bevat." context="/setu:HumanResource//setu:Rates" flag="error">
            <sch:assert test="(normalize-space(@rateStatus) = 'proposed') or (normalize-space(@rateStatus) = 'agreed') ">
                The attribute rateStatus of Rates should have a valid value: 'proposed'.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.ExternalRateSetId.1" fpi="Controleren of het subelement IdValue van het element ExternalRateSetId exact 1x voorkomt." context="/setu:HumanResource//setu:Rates/setu:ExternalRateSetId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element ExternalRateSetId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Amount.1" fpi="Controleren of het attribuut rateAmountPeriod van het element Amount een correcte waarde bevat." context="/setu:HumanResource//setu:Rates/setu:Amount" flag="error">
            <sch:assert test="contains($Amount, concat(',', @rateAmountPeriod, ','))">
                The attribute rateAmountPeriod of the element Amount must contain one of the following values: <sch:value-of select="$Amount"/>
                Currently '<sch:value-of select="@rateAmountPeriod"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Class.1" fpi="Controleren of het element Class van het element Rates een correcte waarde bevat." context="/setu:HumanResource//setu:Rates/setu:Class" flag="error">
            <sch:assert test="contains($Class, concat(',', ., ',')) or (. = '')">
                The element Class must be empty or contain one of the following values: <sch:value-of select="$Class"/>
                Currently '<sch:value-of select="."/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Multiplier.1" fpi="Controleren of het element Multiplier maximaal 1x voorkomt." context="/setu:HumanResource//setu:Rates" flag="error">
            <sch:assert test="count(setu:Multiplier) &lt;= 1">
                The subelement Multiplier of the element Rates may exist at most once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.RatesId.1" fpi="Controleren of het subelement IdValue van het element RatesId exact 1x voorkomt." context="/setu:HumanResource//setu:Rates/setu:RatesId" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element RatesId must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.CustomerRateClassification.1" fpi="Controleren of het subelement IdValue van het element CustomerRateClassification exact 1x voorkomt." context="/setu:HumanResource//setu:Rates/setu:CustomerRateClassification" flag="error">
            <sch:assert test="(count(setu:IdValue)=1) and (normalize-space(setu:IdValue)!='')">
                The subelement IdValue of the element CustomerRateClassification must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Profile.1" fpi="Controleren of het element  Profile exact 1x voorkomt." context="//setu:HumanResource" flag="error">
            <sch:assert test="count(setu:Profile)=1">
                The element Profile must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Resume.1" fpi="Controleren of het element Resume exact 1x voorkomt." context="/setu:HumanResource//setu:Profile" flag="error">
            <sch:assert test="count(setu:Resume)=1">
                The element Resume must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StructuredXMLResume.1" fpi="Controleren of het element StructuredXMLResume exact 1x voorkomt." context="/setu:HumanResource/setu:Profile/setu:Resume" flag="error">
            <sch:assert test="count(setu:StructuredXMLResume)=1">
                The element StructuredXMLResume must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.ContactMethod.2" fpi="Controleren of het element ContactMethod maximaal 1x voorkomt." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EmploymentHistory//setu:EmployerOrg/setu:EmployerContactInfo" flag="error">
            <sch:assert test="count(setu:ContactMethod) &lt;= 1">
                The element ContactMethod of the element EmployerContactInfo may exist at most once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.PositionHistory.1" fpi="Controleren of elk Start Date en End Date element exact 1 Anydate subelement bevatten." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EmploymentHistory//setu:EmployerOrg//setu:PositionHistory" flag="error">
            <sch:assert test="(count(setu:EndDate/setu:AnyDate)=1) and (count(setu:StartDate/setu:AnyDate)=1)">
                The element AnyDate is a mandatory subelement of the StartDate and EndDate elements.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Degree.1" fpi="Controleren of het element Degree maximaal 1x voorkomt." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EducationHistory/setu:SchoolOrInstitution" flag="error">
            <sch:assert test="count(setu:Degree) &lt;= 1">
                The subelement Degree of the element LocalInstitutionClassification may exist at most 1 time.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.DatesOfAttendance.1" fpi="Controleren of elk Start Date en End Date element exact 1 Anydate subelement bevatten." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EducationHistoryHistory//setu:SchoolOrInstitution/setu:DatesOfAttendance" flag="error">
            <sch:assert test="(count(setu:EndDate/setu:AnyDate)=1) and (count(setu:StartDate/setu:AnyDate)=1)">
                The element AnyDate is a mandatory subelement of the StartDate and EndDate elements.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.LocalInstitutionClassification.1" fpi="Controleren of het element LocalInstitutionClassification maximaal 1x voorkomt." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EducationHistory/setu:SchoolOrInstitution" flag="error">
            <sch:assert test="count(setu:LocalInstitutionClassification) &lt;= 1">
                The element LocalInstitutionClassification may exist at most 1 time.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.LocalInstitutionClassification.2" fpi="Controleren of het subelement IdValue van het element LocalInstitutionClassification exact 1x voorkomt." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EducationHistory/setu:SchoolOrInstitution/setu:LocalInstitutionClassification/setu:Id" flag="error">
            <sch:assert test="count(setu:IdValue)=1">
                The subelement Id/IdValue of the element LocalInstitutionClassification must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.LocalInstitutionClassification.3" fpi="Controleren of het attribuut idOwner van het element LocalInstitutionClassification exact 1x voorkomt en niet leeg is." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:EducationHistory/setu:SchoolOrInstitution/setu:LocalInstitutionClassification/setu:Id" flag="error">
            <sch:assert test="(count(@idOwner) = 1) and (normalize-space(@idOwner)!='')">
                The attribute idOwner of the element LocalInstitutionClassification must exist exactly once and may not be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.EffectiveDate.1" fpi="Controleren of elk Start Date en End Date element exact 1 Anydate subelement bevatten." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:LicensesAndCertifications//setu:LicenseOrCertification/setu:EffectiveDate/*" flag="error">
            <sch:assert test="count(setu:AnyDate)=1">
                The element AnyDate is a mandatory subelement of the ValidFrom, ValidTo and FirstIssueDate elements.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.WorkingAndThinkingLevel.1" fpi="Controleren of het attribuut description van het element WorkingAndThinkingLevel een correcte waarde bevat." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:Qualitifications//setu:Competency" flag="error">
            <sch:assert test="((normalize-space(@name)='WorkingAndThinkingLevel') and contains($Degree, concat(',', @description, ','))) or not(normalize-space(@name)='WorkingAndThinkingLevel')">
                The attribute description of the element Compentency must contain one of the following values when name = 'WorkingAndThinkingLevel': <sch:value-of select="$Degree"/>
                Currently '<sch:value-of select="@description"/>' is used.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Competency.1" fpi="Controleren of het attribuut name van het element Competency exact 1x voorkomt en niet leeg is." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:Qualitifications//setu:Competency" flag="error">
            <sch:assert test="(count(@name) = 1) and (normalize-space(@name)!='')">
                The attribute name of the element Competency must exist exactly once and may not be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Competency.2" fpi="Controleren of het attribuut description van het element Competency exact 1x voorkomt en niet leeg is." context="//setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:Qualitifications//setu:Competency" flag="error">
            <sch:assert test="(count(@description) = 1) and (normalize-space(@description)!='')">
                The attribute description of the element Competency must exist exactly once and may not be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.AttachmentReference.1" fpi="Controleren of het element AttachmentReference exact 1x voorkomt en niet leeg is." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:SupportingMaterials" flag="error">
            <sch:assert test="(count(setu:AttachmentReference) = 1) and (normalize-space(setu:AttachmentReference)!='')">
                The element AttachmentReference of the lement SupportingMaterials must exist exactly once and may not be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.AttachmentReference.2" fpi="Controleren of het attribuut mimeType van het element AttachmentReference exact 1x voorkomt en niet leeg is." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:SupportingMaterials/setu:AttachmentReference" flag="error">
            <sch:assert test="(count(@mimeType) = 1) and (normalize-space(@mimeType)!='')">
                The attribute mimeType of the element AttachmentReference must exist exactly once and may not be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Description.1" fpi="Controleren of het element Description exact 1x voorkomt en niet leeg is." context="/setu:HumanResource/setu:Profile/setu:Resume/setu:StructuredXMLResume/setu:SupportingMaterials" flag="error">
            <sch:assert test="(count(setu:Description) = 1) and (normalize-space(setu:Description)!='')">
                The element Description of the element SupportingMaterials must exist exactly once and may not be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.Preferences.1" fpi="Controleren of het element Preferences geen subelementen bevat." context="/setu:HumanResource/setu:Preferences" flag="error">
            <sch:assert test="not(*)">
                The element Preferences of the element HumanResource may not contain any subelements.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.UserArea.1" fpi="Controleren of het element UserArea onder het element HumanResource minimaal 1x voorkomt." context="/setu:HumanResource" flag="error">
            <sch:assert test="count(setu:UserArea) &gt; 0">
                The element UserArea must exist at least once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.HumanResourceAdditionalNL.1" fpi="Controleren of het element HumanResourceAdditionalNL onder het element UserArea exact 1x voorkomt." context="/setu:HumanResource/setu:UserArea" flag="error">
            <sch:assert test="count(nl:HumanResourceAdditionalNL)=1">
                The element HumanResourceAdditionalNL must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.SETUVersionId.1" fpi="Controleren of het element SETUVersionId onder het element HumanResourceAdditionalNL de correcte waarde bevat." context="/setu:HumanResource/setu:UserArea/nl:HumanResourceAdditionalNL" flag="error">
            <sch:assert test="normalize-space(nl:SETUVersionId)='1.4'">
                The element SETUVersionId must contain the following value: 1.4.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingShift.1" fpi="Controleren of het attribuut shiftPeriod van het element StaffingShift exact 1x voorkomt en de correcte waarde bevat." context="/setu:HumanResource/setu:UserArea/nl:HumanResourceAdditionalNL/nl:StaffingShift" flag="error">
            <sch:assert test="(count(@shiftPeriod)=1) and (normalize-space(@shiftPeriod)='weekly')">
                The attribute shiftPeriod of the element StaffingShift must exist exactly once and contain the following value: 'weekly'.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.StaffingShift.2" fpi="Controleren of het subelement Id van het element StaffingShift leeg is." context="/setu:HumanResource/setu:UserArea/nl:HumanResourceAdditionalNL/nl:StaffingShift" flag="error">
            <sch:assert test="normalize-space(setu:Id)=''">
                The subelement Id of the element StaffingShift must be empty.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.CustomerReportingRequirements.1" fpi="Controleren of het element CustomerReportingRequirements juiste elementen bevat." context="/setu:HumanResource/setu:UserArea/nl:HumanResourceAdditionalNL/nl:CustomerReportingRequirements" flag="error">
            <sch:assert test="(count(setu:SupervisorName)=0) and (count(setu:LocationCode)=0) and (count(setu:PurchaseOrderLineItem)=0) and (count(setu:LocationName)=0) and (count(setu:CustomerJobCode)=0) and (count(setu:CustomerJobDescription)=0) and (count(setu:AccountCode)=0) and (count(setu:ExternalOrderNumber)=0) and (count(setu:ExternalReqNumber)=0) and (count(setu:Entity)=0) and (count(setu:SubEntity)=0) and (count(setu:Shift)=0)">
                The element CustomerReportingRequirements contains (a) subelement(s) that is/are not allowed.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.AdditionalRequirement.1" fpi="Controleren of het attribuut requirementTitle exact 1x aanwezig is en niet leeg is bij elk aanwezige element AdditionalRequirement." context="/setu:HumanResource/setu:UserArea/nl:HumanResourceAdditionalNL/nl:CustomerReportingRequirements//setu:AdditionalRequirement" flag="error">
            <sch:assert test="count(@requirementTitle)=1 and normalize-space(@requirementTitle)!=''">
                For each AdditionalRequirement the attribute requirementTitle must exist exactly once and may not be empty .
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.ContactMethod.3" fpi="Controleren of het element ContactMethod exact 1x voorkomt." context="/setu:HumanResource/setu:UserArea/nl:HumanResourceAdditionalNL/nl:SupplierContactInfo" flag="error">
            <sch:assert test="count(setu:ContactMethod)=1">
                The element ContactMethod of the element SupplierContactInfo must exist exactly once.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.200801.businessrules.humanresource.businessrule.InclusiveRate.1" fpi="Controleren of het element InclusiveRate aanwezig is indien er een Rates element aanweizg is." context="/setu:HumanResource" flag="error">
            <sch:assert test="((count(setu:Rates) &gt; 0) and (count(setu:UserArea/nl:HumanResourceAdditionalNL/nl:InclusiveRate) = 1)) or not(count(setu:Rates) &gt; 0)">
                The element InclusiveRate must exist when an element Rates is present.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
    <sch:pattern>
        <sch:rule id="nl.setu.2022.businessrules.humanresource.businessrule.CustomerRateClassification.1" fpi="Controleren of IdValue de goede waarde bevat." context="//setu:Rates/setu:CustomerRateClassification/setu:IdValue" flag="error">
            <sch:assert test="contains($SETU_CL_HourTypes, concat(',', ., ',')) or contains($SETU_CL_ExpenseAllowanceTypes, concat(',', ., ','))">
            Value '
            <sch:value-of select="."/>
            ' is not part of codelist Hour types or Expense and Allowance types.
            </sch:assert>
        </sch:rule>
    </sch:pattern>
</sch:schema>